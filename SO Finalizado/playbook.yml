- name: Configurar la primera máquina virtual (servidorWeb)
  hosts: servidorWeb
  become: yes
  tasks:
    - name: Instalar EPEL release
      ansible.builtin.dnf:
        name: epel-release
        state: present

    - name: Instalar y actualizar Nginx
      ansible.builtin.dnf:
        name: nginx
        state: present
        update_cache: yes

    - name: Iniciar y habilitar Nginx
      ansible.builtin.systemd:
        name: nginx
        state: started

    - name: Copiar archivo de configuración de NGINX
      copy:
        dest: /etc/nginx/conf.d/nginx_status.conf
        content: |
          server {
              listen       80;
              listen       [::]:80;
              server_name  _;
              root         /usr/share/nginx/html;

              # Load configuration files for the default server block.
              include /etc/nginx/default.d/*.conf;

              error_page 404 /404.html;
              location = /404.html {
              }

              error_page 500 502 503 504 /50x.html;
              location = /50x.html {
              }

              location /nginx_status {
                  stub_status on;
                  access_log off;
                  allow all;
              }
          }

    - name: Instalar Node Exporter
      ansible.builtin.get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz

    - name: Extraer Node Exporter
      ansible.builtin.unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Mover el binario de Node Exporter
      ansible.builtin.copy:
        src: /tmp/node_exporter-1.3.1.linux-amd64/node_exporter
        dest: /usr/local/bin/node_exporter
        remote_src: yes
        mode: '0755'

    - name: Crear usuario para Node Exporter 
      ansible.builtin.user:
        name: node_exporter
        system: yes
        shell: /sbin/nologin

    - name: Recargar NGINX para aplicar los cambios
      service:
        name: nginx
        state: reloaded

    - name: Iniciar y habilitar Node Exporter
      ansible.builtin.systemd:
        name: node_exporter
        state: started
        enabled: yes
        daemon_reload: yes

      
- name: Configurar la segunda máquina virtual (servidorMonitoreo)
  hosts: servidorMonitoreo
  become: yes
  tasks:
    # Instalar dependencias necesarias
    - name: Instalar dependencias necesarias
      ansible.builtin.dnf:
        name: 
          - fontconfig
          - urw-fonts
          - epel-release
        state: present

    # Configuración de Grafana
    - name: Descargar e instalar el repositorio de Grafana
      ansible.builtin.get_url:
        url: https://dl.grafana.com/enterprise/release/grafana-enterprise-10.2.3-1.x86_64.rpm
        dest: /tmp/grafana.rpm

    - name: Instalar Grafana desde el archivo RPM
      ansible.builtin.dnf:
        name: /tmp/grafana.rpm
        state: present
        disable_gpg_check: yes

    - name: Recargar systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Iniciar y habilitar Grafana
      ansible.builtin.systemd:
        name: grafana-server
        state: started
        enabled: yes
        daemon_reload: yes

    # Configuración de Prometheus
    - name: Descargar Prometheus
      ansible.builtin.get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.45.0/prometheus-2.45.0.linux-amd64.tar.gz
        dest: /tmp/prometheus.tar.gz

    - name: Crear directorio para Prometheus
      ansible.builtin.file:
        path: /opt/prometheus
        state: directory
        mode: '0755'

    - name: Extraer Prometheus
      ansible.builtin.unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Mover archivos de Prometheus
      ansible.builtin.copy:
        src: "/tmp/prometheus-2.45.0.linux-amd64/{{ item }}"
        dest: "/opt/prometheus/{{ item }}"
        remote_src: yes
        mode: '0755'
      with_items:
        - prometheus
        - promtool

    - name: Crear usuario prometheus
      ansible.builtin.user:
        name: prometheus
        system: yes
        shell: /sbin/nologin
        home: /opt/prometheus

    - name: Crear directorios adicionales para Prometheus
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      with_items:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Configurar prometheus.yml
      ansible.builtin.copy:
        content: |
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'node'
              static_configs:
                - targets: ['192.168.50.4:9100']
                - targets: ['192.168.50.4:9113']
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Crear servicio de Prometheus
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Prometheus Time Series Collection and Processing Server
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          Group=prometheus
          Type=simple
          ExecStart=/opt/prometheus/prometheus \
            --config.file=/etc/prometheus/prometheus.yml \
            --storage.tsdb.path=/var/lib/prometheus/ \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/prometheus.service
        mode: '0644'

    - name: Establecer permisos para directorios de Prometheus
      ansible.builtin.file:
        path: "{{ item }}"
        owner: prometheus
        group: prometheus
        recurse: yes
      with_items:
        - /opt/prometheus
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Recargar systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Iniciar y habilitar Prometheus
      ansible.builtin.systemd:
        name: prometheus
        state: started
        enabled: yes